// <auto-generated />
using System;
using FidgetPro.Fidgetmaster.Web.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FidgetPro.Fidgetmaster.Web.Migrations
{
    [DbContext(typeof(FidgetContext))]
    [Migration("20190813155412_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FidgetPro.Fidgetmaster.Business.Models.Fidget", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<string>("Name");

                    b.Property<long?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Fidgets");
                });

            modelBuilder.Entity("FidgetPro.Fidgetmaster.Business.Models.FidgetType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DesignedDate");

                    b.Property<bool>("IsBouncing");

                    b.Property<bool>("IsFlying");

                    b.Property<bool>("IsSpinning");

                    b.Property<string>("TypeName");

                    b.HasKey("Id");

                    b.ToTable("FidgetTypes");
                });

            modelBuilder.Entity("FidgetPro.Fidgetmaster.Business.Models.Fidget", b =>
                {
                    b.HasOne("FidgetPro.Fidgetmaster.Business.Models.FidgetType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
